{"version":3,"sources":["components/Header/Header.jsx","api/api.js","redux/actions.js","redux/types.js","components/Users/User.jsx","components/Loader/Loader.jsx","components/Users/UsersList.jsx","components/Albums/Album.jsx","components/Albums/Albums.jsx","components/Photos/Photo.jsx","components/Modal/ModalPhoto.jsx","components/Photos/Photos.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Header","pathname","useLocation","isAlbumPage","useRouteMatch","userId","split","className","aria-label","to","fetchApi","url","fetch","then","response","status","json","catch","error","CallApi","albumId","updateUsers","userList","type","payload","updateAlbums","albums","fetchPhotosByAlbumId","dispatch","getPhotosByAlbumId","photos","updatePhotos","User","user","name","username","id","Loader","role","UsersList","users","useSelector","state","loading","isLoadingUsers","useDispatch","useEffect","getUsers","map","key","Album","album","albumPhotos","defaultAlbumPhoto","albumCover","thumbnailUrl","albumSize","length","style","backgroundImage","title","Albums","isLoadingAlbums","useParams","getAlbumsByUserId","fetchAlbumsByUserId","Photo","React","memo","photo","onClick","cardPhoto","prevProps","nextProps","ModalPhoto","closeAction","next","previous","data-dismiss","aria-hidden","width","height","src","alt","Photos","isLoadingPhotos","useState","show","setShow","currentPhotoIndex","setCurrentPhotoIndex","modalPhoto","open","photoIndex","close","showNextPhoto","showPreviousPhoto","useModalPhoto","index","App","basename","exact","path","component","initialState","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f81c4ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useRouteMatch} from \"react-router\";\r\n\r\nconst Header = () => {\r\n  const {pathname} = useLocation();\r\n  const isAlbumPage = useRouteMatch(\"/users/:userId/albums/:albumId\");\r\n  const userId = pathname.split(\"/\")[2];\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-success\" aria-label=\"breadcrumb\">\r\n      <div className=\"container\">\r\n        <ol className=\"breadcrumb bg-transparent font-weight-bold mb-0\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link className=\"text-white\" to=\"/\">Пользователи</Link>\r\n          </li>\r\n          {\r\n            isAlbumPage &&\r\n            <li className=\"breadcrumb-item\">\r\n              <Link className=\"text-white\" to={`/users/${userId}/albums`}>Альбомы</Link>\r\n            </li>\r\n          }\r\n        </ol>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const API_URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nconst fetchApi = (url) => {\r\n  return fetch(`${API_URL}${url}`)\r\n    .then(response => {\r\n      if (response.status < 400) {\r\n        return response.json();\r\n      } else {\r\n        throw response;\r\n      }\r\n    })\r\n    .catch(response => {\r\n      return response.json()\r\n        .then(error => {\r\n          throw error;\r\n        });\r\n    });\r\n};\r\n\r\nexport default class CallApi {\r\n  static getUsers() {\r\n    return fetchApi(\r\n      `/users`\r\n    )\r\n  };\r\n\r\n  static getAlbumsByUserId(userId) {\r\n    return fetchApi(\r\n      `/users/${userId}/albums`\r\n    )\r\n  };\r\n\r\n  static getPhotosByAlbumId(albumId) {\r\n    return fetchApi(\r\n      `/albums/${albumId}/photos`\r\n    )\r\n  };\r\n};\r\n","import CallApi from \"../api/api\";\r\nimport * as types from \"./types\";\r\n\r\nexport const fetchUsers = () => dispatch => {\r\n  dispatch({\r\n    type: types.FETCH_USERS\r\n  });\r\n  CallApi.getUsers()\r\n    .then(userList => {\r\n      dispatch(updateUsers(userList));\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.FETCH_USERS_ERROR\r\n      })\r\n    })\r\n};\r\n\r\nconst updateUsers = (userList) => ({\r\n  type: types.FETCH_USERS_SUCCESS,\r\n  payload: userList\r\n});\r\n\r\nexport const fetchAlbumsByUserId = (userId) => dispatch => {\r\n  dispatch({\r\n    type: types.FETCH_ALBUMS_BY_USER_ID\r\n  });\r\n  CallApi.getAlbumsByUserId(userId)\r\n    .then(albums => {\r\n      dispatch(updateAlbums(albums));\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.FETCH_ALBUMS_BY_USER_ID_ERROR\r\n      })\r\n    })\r\n};\r\n\r\nconst updateAlbums = (albums) => ({\r\n  type: types.FETCH_ALBUMS_BY_USER_ID_SUCCESS,\r\n  payload: albums\r\n});\r\n\r\nexport const fetchPhotosByAlbumId = (albumId) => dispatch => {\r\n  dispatch({\r\n    type: types.FETCH_PHOTO_BY_ALBUM_ID\r\n  });\r\n  CallApi.getPhotosByAlbumId(albumId)\r\n    .then(photos => {\r\n      dispatch(updatePhotos(albumId, photos));\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.FETCH_PHOTO_BY_ALBUM_ID_ERROR\r\n      })\r\n    })\r\n};\r\n\r\nconst updatePhotos = (albumId, photos) => ({\r\n  type: types.FETCH_PHOTO_BY_ALBUM_ID_SUCCESS,\r\n  payload: {\r\n    albumId,\r\n    photos\r\n  }\r\n});\r\n","export const FETCH_USERS = \"FETCH_USERS\";\r\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\";\r\n\r\nexport const FETCH_ALBUMS_BY_USER_ID = \"FETCH_ALBUMS_BY_USER_ID\";\r\nexport const FETCH_ALBUMS_BY_USER_ID_SUCCESS = \"FETCH_ALBUMS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_ALBUMS_BY_USER_ID_ERROR = \"FETCH_ALBUMS_BY_USER_ID_ERROR\";\r\n\r\nexport const FETCH_PHOTO_BY_ALBUM_ID = \"FETCH_PHOTO_BY_ALBUM_ID\";\r\nexport const FETCH_PHOTO_BY_ALBUM_ID_SUCCESS = \"FETCH_PHOTO_BY_ALBUM_ID_SUCCESS\";\r\nexport const FETCH_PHOTO_BY_ALBUM_ID_ERROR = \"FETCH_PHOTO_BY_ALBUM_ID_ERROR\";\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst User = ({user}) => (\r\n  <div className=\"card shadow\">\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{user.name}</h5>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n      <Link\r\n        to={`/users/${user.id}/albums`}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Список альбомов\r\n      </Link>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center m-5 w-100\">\r\n    <div className=\"spinner-border text-success\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsers} from \"../../redux/actions\";\r\nimport User from \"./User\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst UsersList = () => {\r\n\r\n  const users = useSelector(state => state.users);\r\n  const loading = useSelector(state => state.isLoadingUsers);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n      dispatch(fetchUsers())\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {\r\n        loading\r\n          ? <Loader/>\r\n          : users.map(user => {\r\n            return (\r\n              <div key={user.id} className=\"col-3 mt-4\">\r\n                <User user={user}/>\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList;\r\n","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchPhotosByAlbumId} from \"../../redux/actions\";\r\n\r\nconst Album = ({album}) => {\r\n  const albumId = album.id;\r\n  const albumPhotos = useSelector(state => state.photos[albumId] ?? []);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchPhotosByAlbumId(albumId))\r\n  }, [albumId, dispatch]);\r\n\r\n  const defaultAlbumPhoto = albumPhotos[0];\r\n  const albumCover = defaultAlbumPhoto?.thumbnailUrl ?? \"\";\r\n  const albumSize = albumPhotos.length ?? 0;\r\n\r\n  return (\r\n    <div className=\"card border-0 bg-secondary shadow card-picture\" style={{backgroundImage: `url(${albumCover})`}}>\r\n      <Link to={`/users/${album.userId}/albums/${albumId}`}>\r\n        <div className=\"card-img-overlay\">\r\n          <small className=\"card-text text-center text-white\">В альбоме {albumSize} фото</small>\r\n          <h5 className=\"card-title text-uppercase text-white\">{album.title}</h5>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchAlbumsByUserId} from \"../../redux/actions\";\r\nimport {useParams} from \"react-router\";\r\nimport Album from \"./Album\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst Albums = () => {\r\n  const loading = useSelector(state => state.isLoadingAlbums);\r\n  const albums = useSelector(state => state.albums);\r\n\r\n  const {userId} = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAlbumsByUserId(userId))\r\n  }, [userId, dispatch] );\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {\r\n        loading\r\n          ? <Loader/>\r\n          : albums.map(album => {\r\n            return (\r\n              <div key={album.id} className=\"col-3 mt-4\">\r\n                <Album album={album}/>\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Albums;\r\n","import React from \"react\";\r\n\r\nconst Photo = React.memo(\r\n  ({photo, onClick}) => {\r\n    const cardPhoto = photo?.thumbnailUrl ?? \"\";\r\n\r\n    return (\r\n      <div\r\n        className=\"card border-0 bg-secondary shadow card-picture\"\r\n        style={{backgroundImage: `url(${cardPhoto})`}}\r\n        onClick={onClick}\r\n      >\r\n        <div className=\"card-img-overlay\">\r\n          <h6 className=\"card-title text-uppercase text-white\">{photo?.title ?? \"\"}</h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => prevProps.photo === nextProps.photo\r\n);\r\n\r\nexport default Photo;\r\n","import React from \"react\";\r\n\r\nconst ModalPhoto = ({\r\n    photo,\r\n    closeAction,\r\n    next,\r\n    previous\r\n}) => (\r\n  <div className=\"modal modal-block\" role=\"dialog\">\r\n    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title text-uppercase\" id=\"exampleModalLabel\">\r\n            {photo.title}\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={closeAction}\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <img\r\n            className=\"img-fluid\"\r\n            width=\"600\"\r\n            height=\"600\"\r\n            src={photo.url}\r\n            alt={photo.title}\r\n          />\r\n        </div>\r\n        <div className=\"modal-footer d-flex justify-content-between\">\r\n          <button\r\n            onClick={previous}\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            data-dismiss=\"modal\">\r\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"/>\r\n          </button>\r\n          <button\r\n            onClick={next}\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n          >\r\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"/>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ModalPhoto;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router\";\r\nimport {fetchPhotosByAlbumId} from \"../../redux/actions\";\r\nimport Photo from \"./Photo\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport ModalPhoto from \"../Modal/ModalPhoto\";\r\n\r\nconst useModalPhoto = (photos) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(null);\r\n\r\n  const open = photoIndex => {\r\n    setCurrentPhotoIndex(photoIndex);\r\n    setShow(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setCurrentPhotoIndex(null);\r\n    setShow(false);\r\n  };\r\n\r\n  const showNextPhoto = () => {\r\n    setCurrentPhotoIndex(currentPhotoIndex => ((currentPhotoIndex + 1) % photos.length));\r\n  };\r\n  const showPreviousPhoto = () => {\r\n    setCurrentPhotoIndex(currentPhotoIndex => ((currentPhotoIndex - 1 + photos.length) % photos.length));\r\n  };\r\n  return {\r\n    modalPhoto: {\r\n      show,\r\n      open,\r\n      close\r\n    },\r\n    showNextPhoto,\r\n    showPreviousPhoto,\r\n    currentPhotoIndex\r\n  };\r\n};\r\n\r\nconst Photos = () => {\r\n\r\n  const {albumId} = useParams();\r\n  const photos = useSelector(state => state.photos[albumId]) ?? [];\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPhotosByAlbumId(albumId))\r\n  }, [albumId, dispatch])\r\n\r\n  const loading = useSelector(state => state.isLoadingPhotos);\r\n  const {\r\n    modalPhoto,\r\n    currentPhotoIndex,\r\n    showNextPhoto,\r\n    showPreviousPhoto\r\n  } = useModalPhoto(photos);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {\r\n        loading\r\n          ? <Loader/>\r\n          : photos.map((photo, index) => {\r\n            return (\r\n              <div key={photo.id} className=\"col-3 mt-4\">\r\n                <Photo\r\n                  photo={photo}\r\n                  onClick={() => modalPhoto.open(index)}\r\n                />\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n      {\r\n        modalPhoto.show\r\n        && <ModalPhoto\r\n          photo={photos[currentPhotoIndex]}\r\n          closeAction={modalPhoto.close}\r\n          next={showNextPhoto}\r\n          previous={showPreviousPhoto}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Photos;\r\n","import React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route} from \"react-router\";\nimport Header from \"./components/Header/Header\";\nimport UsersList from \"./components/Users/UsersList\";\nimport Albums from \"./components/Albums/Albums\";\nimport Photos from \"./components/Photos/Photos\";\n\nconst App = () => (\n  <BrowserRouter basename=\"/photo-gallery\">\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n        <Route exact path=\"/\" component={UsersList}/>\n        <Route exact path=\"/users/:userId/albums\" component={Albums}/>\n        <Route path=\"/users/:userId/albums/:albumId\" component={Photos}/>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  albums: [],\r\n  photos: {},\r\n  isLoadingUsers: false,\r\n  isLoadingAlbums: false,\r\n  isLoadingPhotos: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case types.FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        isLoadingUsers: true\r\n      };\r\n\r\n    case types.FETCH_ALBUMS_BY_USER_ID:\r\n      return {\r\n        ...state,\r\n        isLoadingAlbums: true\r\n      };\r\n\r\n    case types.FETCH_PHOTO_BY_ALBUM_ID:\r\n      return {\r\n        ...state,\r\n        isLoadingPhotos: true\r\n      };\r\n\r\n    case types.FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        isLoadingUsers: false\r\n      };\r\n\r\n    case types.FETCH_ALBUMS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        albums: action.payload,\r\n        isLoadingAlbums: false\r\n      };\r\n\r\n    case types.FETCH_PHOTO_BY_ALBUM_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photos: {\r\n          ...state.photos,\r\n          [action.payload.albumId]: action.payload.photos\r\n        },\r\n        isLoadingPhotos: false\r\n      };\r\n\r\n    case types.FETCH_USERS_ERROR:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        isLoadingUsers: false\r\n      };\r\n\r\n    case types.FETCH_ALBUMS_BY_USER_ID_ERROR:\r\n      return {\r\n        ...state,\r\n        albums: [],\r\n        isLoadingAlbums: false\r\n      };\r\n\r\n    case types.FETCH_PHOTO_BY_ALBUM_ID_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoadingPhotos: false\r\n      };\r\n\r\n    default :\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}